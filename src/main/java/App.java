import org.apache.commons.lang3.SystemUtils;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static final String HELP = "\t\tUse 'cucumber', 'chrome', or 'firefox' as parameter.";
    WebDriver driver;

    public static void main(String[] args) {
        App app = new App();
        if(args.length == 0) {
            System.out.println("----> Missing arguments:");
            System.out.println(HELP);
            return;
        } else if (args.length == 1) {
            if("firefox".equals(args[0])) {
                app.initFirefox();
                app.process();
            } else if("chrome".equals(args[0])) {
                app.initChrome();
                app.process();
            } else if("cucumber".equals(args[0])) {
                System.out.println(" ... Call Cucumber with parameters here ...");
            } else {
                System.out.println("---> Unsupported parameter '"+args[0]+"'!");
                System.out.println(HELP);
                return;
            }
        }
    }

    public void initFirefox() {
        System.out.println("App.initFirefox");
        // OS independent way of building the WebDriver path
        String driverName = "geckodriver";
        String os = null;

        // Gekodriver contains the version in the directory name too (unlike Chrome)
        // Todo: change it here too, when changing in gradle.properties
        String gekodriverVersion = "v0.23.0";

        if(SystemUtils.IS_OS_WINDOWS) {
            driverName+=".exe"; // windows files contain the .exe
            os = "win64";
        } else if(SystemUtils.IS_OS_MAC_OSX) {
            os = "macos";
        } else if(SystemUtils.IS_OS_LINUX) {
            os = "linux64";
        } else {
            throw new RuntimeException("Unsupported OS");
        }

        String driverFileName = "drivers/geckodriver-"+gekodriverVersion+"-"+os+"/"+driverName;
        System.out.println("using driverFileName = " + driverFileName);

        // set the driver location
        System.setProperty("webdriver.gecko.driver", driverFileName);
        driver = new FirefoxDriver();
    }

    public void initChrome() {
        System.out.println("App.initChrome");
        // OS independent way of building the WebDriver path
        String driverName = "chromedriver";
        String os = null;
        if(SystemUtils.IS_OS_WINDOWS) {
            driverName+=".exe"; // windows files contain the .exe
            os = "win32";
        } else if(SystemUtils.IS_OS_MAC_OSX) {
            os = "mac64";
        } else if(SystemUtils.IS_OS_LINUX) {
            os = "linux64";
        } else {
            throw new RuntimeException("Unsupported OS");
        }

        String driverFileName = "drivers/chromedriver_"+os+"/"+driverName;
        System.out.println("using driverFileName = " + driverFileName);

        // set the driver location
        System.setProperty("webdriver.chrome.driver", driverFileName);
        driver = new ChromeDriver();
    }

    public void process() {
        System.out.println("App.process");

        // navigate to Google to test if it works ...
        driver.get("https://google.com");
    }

    // demo method and unit test as generated by gradle ...
    public String getGreeting() {
        return "Hello world.";
    }
}
